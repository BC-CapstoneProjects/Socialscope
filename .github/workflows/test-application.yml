name: Test Application
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./root/frontend/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./root/frontend
      - name: Build front end with npm
        run: npm run build --if-present
        working-directory: ./root/frontend
      - name: Move bundled front end
        run: |
          mkdir ./root/backend/src/main/resources/static
          mv -v ./root/frontend/build/* ./root/backend/src/main/resources/static
      - name: Generate credential files
        run: |
          mkdir ./root/backend/src/main/resources/static/private
          echo -n $CREDENTIALS_DATA | base64 --decode > ./root/backend/src/main/resources/private/credentials.json
          echo -n $SOCIALSENTANALYSIS_DATA | base64 --decode > ./root/backend/src/main/resources/private/socialsentanalysis.json
        env:
          CREDENTIALS_DATA: ${{ secrets.SOCIAL_MEDIA_API_CREDENTIALS }}
          SOCIALSENTANALYSIS_DATA: ${{ secrets.SENTIMENT_ANALYSIS_API_CREDENTIALS }}
      - name: Set up java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          cache: 'maven'
      - name: Build back end with maven
        run: mvn --batch-mode package
        working-directory: ./root/backend
#      - name: Configure aws credentials to deploy if necessary
#        if: github.ref == 'refs/heads/main'
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID  }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: "us-east-1"
#      - name: Deploy to aws if necessary
#        if: github.ref == 'refs/heads/main'
#        run: |
#          aws s3 cp "./root/backend/target/$TARGET_FILE_NAME.jar"
#          aws elasticbeanstalk create-application-version --application-name Socialscope --version-label $APP_VERSION --source-bundle S3Bucket="socialscope-source-bucket",S3Key="$TARGET_FILE_NAME.jar"
#          aws elasticbeanstalk update-environment --application-name Socialscope --environment-name Socialscope-env --version-label $APP_VERSION
#        env:
#          APP_VERSION: 1
#          TARGET_FILE_NAME: "backend-0.0.1-SNAPSHOT" 
      - name: Delete credential files
        run: |
          rm ./root/backend/src/main/resources/private/credentials.json
          rm ./root/backend/src/main/resources/private/socialsentanalysis.json
        if: ${{ always() }}
      - name: Delete testing jar
        run: |
          rm -rf ./root/backend/target

